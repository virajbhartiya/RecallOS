// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String   @id @default(uuid()) @db.Uuid
  wallet_address  String   @unique
  privy_user_id   String?
  created_at      DateTime @default(now())
  
  // Relations
  memories        Memory[]
  summarized_content SummarizedContent[]
  
  @@map("users")
}

model Memory {
  id              String   @id @default(uuid()) @db.Uuid
  user_id         String   @db.Uuid
  source          String
  url             String?
  title           String?
  content         String
  summary         String?
  hash            String?  @unique
  timestamp       BigInt
  created_at      DateTime @default(now())
  
  // Additional fields for rich context
  full_content    String?
  page_metadata   Json?
  page_structure  Json?
  user_activity   Json?
  
  // Relations
  user            User           @relation(fields: [user_id], references: [id], onDelete: Cascade)
  embeddings      Embedding[]
  avail_commits   AvailCommit[]
  
  @@map("memories")
}

model Embedding {
  id              String   @id @default(uuid()) @db.Uuid
  memory_id       String   @db.Uuid
  vector          String?  // Store as JSON string for now
  model_name      String
  created_at      DateTime @default(now())
  
  // Relations
  memory          Memory   @relation(fields: [memory_id], references: [id], onDelete: Cascade)
  
  @@map("embeddings")
}

model AvailCommit {
  id              String   @id @default(uuid()) @db.Uuid
  memory_id       String   @db.Uuid
  tx_hash         String
  block_number    BigInt
  anchored_at     DateTime @default(now())
  
  // Relations
  memory          Memory   @relation(fields: [memory_id], references: [id], onDelete: Cascade)
  
  @@map("avail_commits")
}

model SummarizedContent {
  id              String   @id @default(uuid()) @db.Uuid
  user_id         String   @db.Uuid
  original_text   String
  summary         String
  created_at      DateTime @default(now())
  
  // Relations
  user            User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  
  @@map("summarized_content")
}